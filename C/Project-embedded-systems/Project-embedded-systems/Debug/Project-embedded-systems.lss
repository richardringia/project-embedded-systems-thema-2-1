
Project-embedded-systems.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000045c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004b0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b17  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000860  00000000  00000000  000010a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ba5  00000000  00000000  00001907  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  000024ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00010f4f  00000000  00000000  00002554  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d9  00000000  00000000  000134a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0001357c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00003e3b  00000000  00000000  000135cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	4c c0       	rjmp	.+152    	; 0x9e <__bad_interrupt>
   6:	00 00       	nop
   8:	4a c0       	rjmp	.+148    	; 0x9e <__bad_interrupt>
   a:	00 00       	nop
   c:	48 c0       	rjmp	.+144    	; 0x9e <__bad_interrupt>
   e:	00 00       	nop
  10:	46 c0       	rjmp	.+140    	; 0x9e <__bad_interrupt>
  12:	00 00       	nop
  14:	44 c0       	rjmp	.+136    	; 0x9e <__bad_interrupt>
  16:	00 00       	nop
  18:	42 c0       	rjmp	.+132    	; 0x9e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	40 c0       	rjmp	.+128    	; 0x9e <__bad_interrupt>
  1e:	00 00       	nop
  20:	3e c0       	rjmp	.+124    	; 0x9e <__bad_interrupt>
  22:	00 00       	nop
  24:	3c c0       	rjmp	.+120    	; 0x9e <__bad_interrupt>
  26:	00 00       	nop
  28:	3a c0       	rjmp	.+116    	; 0x9e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	38 c0       	rjmp	.+112    	; 0x9e <__bad_interrupt>
  2e:	00 00       	nop
  30:	36 c0       	rjmp	.+108    	; 0x9e <__bad_interrupt>
  32:	00 00       	nop
  34:	34 c0       	rjmp	.+104    	; 0x9e <__bad_interrupt>
  36:	00 00       	nop
  38:	32 c0       	rjmp	.+100    	; 0x9e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	30 c0       	rjmp	.+96     	; 0x9e <__bad_interrupt>
  3e:	00 00       	nop
  40:	2e c0       	rjmp	.+92     	; 0x9e <__bad_interrupt>
  42:	00 00       	nop
  44:	2c c0       	rjmp	.+88     	; 0x9e <__bad_interrupt>
  46:	00 00       	nop
  48:	2a c0       	rjmp	.+84     	; 0x9e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	28 c0       	rjmp	.+80     	; 0x9e <__bad_interrupt>
  4e:	00 00       	nop
  50:	26 c0       	rjmp	.+76     	; 0x9e <__bad_interrupt>
  52:	00 00       	nop
  54:	24 c0       	rjmp	.+72     	; 0x9e <__bad_interrupt>
  56:	00 00       	nop
  58:	22 c0       	rjmp	.+68     	; 0x9e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	20 c0       	rjmp	.+64     	; 0x9e <__bad_interrupt>
  5e:	00 00       	nop
  60:	1e c0       	rjmp	.+60     	; 0x9e <__bad_interrupt>
  62:	00 00       	nop
  64:	1c c0       	rjmp	.+56     	; 0x9e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e5       	ldi	r30, 0x5C	; 92
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 30       	cpi	r26, 0x00	; 0
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	34 d0       	rcall	.+104    	; 0x104 <main>
  9c:	dd c1       	rjmp	.+954    	; 0x458 <_exit>

0000009e <__bad_interrupt>:
  9e:	b0 cf       	rjmp	.-160    	; 0x0 <__vectors>

000000a0 <board_init>:
		port_pin_flags_t flags)
{
	/* Select direction and initial pin state */
	if (flags & IOPORT_DIR_OUTPUT) {
		if (flags & IOPORT_INIT_HIGH) {
			*((uint8_t *)port + 2) |= pin_mask;
  a0:	95 b1       	in	r25, 0x05	; 5
			*((uint8_t *)port + 2) &= ~pin_mask;
		}

		*((uint8_t *)port + 1) |= pin_mask;
	} else {
		*((uint8_t *)port + 1) &= ~pin_mask;
  a2:	84 b1       	in	r24, 0x04	; 4
  a4:	80 62       	ori	r24, 0x20	; 32
  a6:	8f 77       	andi	r24, 0x7F	; 127
  a8:	84 b9       	out	0x04, r24	; 4
		if (flags & IOPORT_PULL_UP) {
			*((uint8_t *)port + 2) |= pin_mask;
  aa:	89 2f       	mov	r24, r25
  ac:	80 6a       	ori	r24, 0xA0	; 160
  ae:	85 b9       	out	0x05, r24	; 5
  b0:	08 95       	ret

000000b2 <uart_init>:

void usart_transmit(uint8_t data){
	
	loop_until_bit_is_set(UCSR0A, UDRE0);
	// send the data
	UDR0 = data;
  b2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  b6:	83 e3       	ldi	r24, 0x33	; 51
  b8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  bc:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
  c0:	88 e1       	ldi	r24, 0x18	; 24
  c2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  c6:	86 e0       	ldi	r24, 0x06	; 6
  c8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  cc:	08 95       	ret

000000ce <adc_init>:
}

void adc_init()
{
	 // AREF = AVcc
	 ADMUX = (1<<REFS0);
  ce:	80 e4       	ldi	r24, 0x40	; 64
  d0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	 
	 // ADC Enable and prescaler of 128
	 // 16000000/128 = 125000
	 ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
  d4:	87 e8       	ldi	r24, 0x87	; 135
  d6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
  da:	08 95       	ret

000000dc <adc_read>:
{
	// select the corresponding channel 0~7
	// ANDing with '7' will always keep the value
	// of 'ch' between 0 and 7
	ch &= 0b00000111;  // AND operation with 7
	ADMUX = (ADMUX & 0xF8)|ch;     // clears the bottom 3 bits before ORing
  dc:	ec e7       	ldi	r30, 0x7C	; 124
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	90 81       	ld	r25, Z
  e2:	98 7f       	andi	r25, 0xF8	; 248
  e4:	87 70       	andi	r24, 0x07	; 7
  e6:	89 2b       	or	r24, r25
  e8:	80 83       	st	Z, r24
	
	// start single conversion
	// write '1' to ADSC
	ADCSRA |= (1<<ADSC);
  ea:	ea e7       	ldi	r30, 0x7A	; 122
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	80 64       	ori	r24, 0x40	; 64
  f2:	80 83       	st	Z, r24
	
	// wait for conversion to complete
	// ADSC becomes '0' again
	// till then, run loop continuously
	while(ADCSRA & (1<<ADSC));
  f4:	80 81       	ld	r24, Z
  f6:	86 fd       	sbrc	r24, 6
  f8:	fd cf       	rjmp	.-6      	; 0xf4 <adc_read+0x18>
	
	return (ADC);
  fa:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
  fe:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
 102:	08 95       	ret

00000104 <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();
 104:	cd df       	rcall	.-102    	; 0xa0 <board_init>
	uart_init();
 106:	d5 df       	rcall	.-86     	; 0xb2 <uart_init>
	adc_init();
 108:	e2 df       	rcall	.-60     	; 0xce <adc_init>
 10a:	8f ef       	ldi	r24, 0xFF	; 255
	DDRD = 0xff;
 10c:	8a b9       	out	0x0a, r24	; 10
 10e:	d0 e2       	ldi	r29, 0x20	; 32
		float value = adc_read(0) * 4.68;
		value /= 1024.0;
		float temperatureC = (value - 0.5) * 100;
		if (temperatureC > 16)
		{
			PORTD = 0b11100000;
 110:	c0 ee       	ldi	r28, 0xE0	; 224
	uart_init();
	adc_init();
	DDRD = 0xff;
	
	while (1) {
		float value = adc_read(0) * 4.68;
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	e3 df       	rcall	.-58     	; 0xdc <adc_read>
 116:	bc 01       	movw	r22, r24
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	84 d0       	rcall	.+264    	; 0x226 <__floatunsisf>
 11e:	2f e8       	ldi	r18, 0x8F	; 143
 120:	32 ec       	ldi	r19, 0xC2	; 194
 122:	45 e9       	ldi	r20, 0x95	; 149
 124:	50 e4       	ldi	r21, 0x40	; 64
 126:	11 d1       	rcall	.+546    	; 0x34a <__mulsf3>
 128:	20 e0       	ldi	r18, 0x00	; 0
		value /= 1024.0;
		float temperatureC = (value - 0.5) * 100;
		if (temperatureC > 16)
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	40 e8       	ldi	r20, 0x80	; 128
 12e:	5a e3       	ldi	r21, 0x3A	; 58
 130:	0c d1       	rcall	.+536    	; 0x34a <__mulsf3>
 132:	20 e0       	ldi	r18, 0x00	; 0
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	40 e0       	ldi	r20, 0x00	; 0
 138:	5f e3       	ldi	r21, 0x3F	; 63
 13a:	10 d0       	rcall	.+32     	; 0x15c <__subsf3>
 13c:	20 e0       	ldi	r18, 0x00	; 0
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	48 ec       	ldi	r20, 0xC8	; 200
 142:	52 e4       	ldi	r21, 0x42	; 66
 144:	02 d1       	rcall	.+516    	; 0x34a <__mulsf3>
 146:	20 e0       	ldi	r18, 0x00	; 0
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	40 e8       	ldi	r20, 0x80	; 128
 14c:	51 e4       	ldi	r21, 0x41	; 65
 14e:	f9 d0       	rcall	.+498    	; 0x342 <__gesf2>
 150:	18 16       	cp	r1, r24
 152:	14 f4       	brge	.+4      	; 0x158 <main+0x54>
 154:	cb b9       	out	0x0b, r28	; 11
 156:	dd cf       	rjmp	.-70     	; 0x112 <main+0xe>
		{
			PORTD = 0b11100000;
 158:	db b9       	out	0x0b, r29	; 11
 15a:	db cf       	rjmp	.-74     	; 0x112 <main+0xe>

0000015c <__subsf3>:
		}
		else
		{
			PORTD = 0b00100000;
 15c:	50 58       	subi	r21, 0x80	; 128

0000015e <__addsf3>:
 15e:	bb 27       	eor	r27, r27
 160:	aa 27       	eor	r26, r26
 162:	0e d0       	rcall	.+28     	; 0x180 <__addsf3x>
 164:	b4 c0       	rjmp	.+360    	; 0x2ce <__fp_round>
 166:	a5 d0       	rcall	.+330    	; 0x2b2 <__fp_pscA>
 168:	30 f0       	brcs	.+12     	; 0x176 <__addsf3+0x18>
 16a:	aa d0       	rcall	.+340    	; 0x2c0 <__fp_pscB>
 16c:	20 f0       	brcs	.+8      	; 0x176 <__addsf3+0x18>
 16e:	31 f4       	brne	.+12     	; 0x17c <__addsf3+0x1e>
 170:	9f 3f       	cpi	r25, 0xFF	; 255
 172:	11 f4       	brne	.+4      	; 0x178 <__addsf3+0x1a>
 174:	1e f4       	brtc	.+6      	; 0x17c <__addsf3+0x1e>
 176:	9a c0       	rjmp	.+308    	; 0x2ac <__fp_nan>
 178:	0e f4       	brtc	.+2      	; 0x17c <__addsf3+0x1e>
 17a:	e0 95       	com	r30
 17c:	e7 fb       	bst	r30, 7
 17e:	90 c0       	rjmp	.+288    	; 0x2a0 <__fp_inf>

00000180 <__addsf3x>:
 180:	e9 2f       	mov	r30, r25
 182:	b6 d0       	rcall	.+364    	; 0x2f0 <__fp_split3>
 184:	80 f3       	brcs	.-32     	; 0x166 <__addsf3+0x8>
 186:	ba 17       	cp	r27, r26
 188:	62 07       	cpc	r22, r18
 18a:	73 07       	cpc	r23, r19
 18c:	84 07       	cpc	r24, r20
 18e:	95 07       	cpc	r25, r21
 190:	18 f0       	brcs	.+6      	; 0x198 <__addsf3x+0x18>
 192:	71 f4       	brne	.+28     	; 0x1b0 <__addsf3x+0x30>
 194:	9e f5       	brtc	.+102    	; 0x1fc <__addsf3x+0x7c>
 196:	ce c0       	rjmp	.+412    	; 0x334 <__fp_zero>
 198:	0e f4       	brtc	.+2      	; 0x19c <__addsf3x+0x1c>
 19a:	e0 95       	com	r30
 19c:	0b 2e       	mov	r0, r27
 19e:	ba 2f       	mov	r27, r26
 1a0:	a0 2d       	mov	r26, r0
 1a2:	0b 01       	movw	r0, r22
 1a4:	b9 01       	movw	r22, r18
 1a6:	90 01       	movw	r18, r0
 1a8:	0c 01       	movw	r0, r24
 1aa:	ca 01       	movw	r24, r20
 1ac:	a0 01       	movw	r20, r0
 1ae:	11 24       	eor	r1, r1
 1b0:	ff 27       	eor	r31, r31
 1b2:	59 1b       	sub	r21, r25
 1b4:	99 f0       	breq	.+38     	; 0x1dc <__addsf3x+0x5c>
 1b6:	59 3f       	cpi	r21, 0xF9	; 249
 1b8:	50 f4       	brcc	.+20     	; 0x1ce <__addsf3x+0x4e>
 1ba:	50 3e       	cpi	r21, 0xE0	; 224
 1bc:	68 f1       	brcs	.+90     	; 0x218 <__addsf3x+0x98>
 1be:	1a 16       	cp	r1, r26
 1c0:	f0 40       	sbci	r31, 0x00	; 0
 1c2:	a2 2f       	mov	r26, r18
 1c4:	23 2f       	mov	r18, r19
 1c6:	34 2f       	mov	r19, r20
 1c8:	44 27       	eor	r20, r20
 1ca:	58 5f       	subi	r21, 0xF8	; 248
 1cc:	f3 cf       	rjmp	.-26     	; 0x1b4 <__addsf3x+0x34>
 1ce:	46 95       	lsr	r20
 1d0:	37 95       	ror	r19
 1d2:	27 95       	ror	r18
 1d4:	a7 95       	ror	r26
 1d6:	f0 40       	sbci	r31, 0x00	; 0
 1d8:	53 95       	inc	r21
 1da:	c9 f7       	brne	.-14     	; 0x1ce <__addsf3x+0x4e>
 1dc:	7e f4       	brtc	.+30     	; 0x1fc <__addsf3x+0x7c>
 1de:	1f 16       	cp	r1, r31
 1e0:	ba 0b       	sbc	r27, r26
 1e2:	62 0b       	sbc	r22, r18
 1e4:	73 0b       	sbc	r23, r19
 1e6:	84 0b       	sbc	r24, r20
 1e8:	ba f0       	brmi	.+46     	; 0x218 <__addsf3x+0x98>
 1ea:	91 50       	subi	r25, 0x01	; 1
 1ec:	a1 f0       	breq	.+40     	; 0x216 <__addsf3x+0x96>
 1ee:	ff 0f       	add	r31, r31
 1f0:	bb 1f       	adc	r27, r27
 1f2:	66 1f       	adc	r22, r22
 1f4:	77 1f       	adc	r23, r23
 1f6:	88 1f       	adc	r24, r24
 1f8:	c2 f7       	brpl	.-16     	; 0x1ea <__addsf3x+0x6a>
 1fa:	0e c0       	rjmp	.+28     	; 0x218 <__addsf3x+0x98>
 1fc:	ba 0f       	add	r27, r26
 1fe:	62 1f       	adc	r22, r18
 200:	73 1f       	adc	r23, r19
 202:	84 1f       	adc	r24, r20
 204:	48 f4       	brcc	.+18     	; 0x218 <__addsf3x+0x98>
 206:	87 95       	ror	r24
 208:	77 95       	ror	r23
 20a:	67 95       	ror	r22
 20c:	b7 95       	ror	r27
 20e:	f7 95       	ror	r31
 210:	9e 3f       	cpi	r25, 0xFE	; 254
 212:	08 f0       	brcs	.+2      	; 0x216 <__addsf3x+0x96>
 214:	b3 cf       	rjmp	.-154    	; 0x17c <__addsf3+0x1e>
 216:	93 95       	inc	r25
 218:	88 0f       	add	r24, r24
 21a:	08 f0       	brcs	.+2      	; 0x21e <__addsf3x+0x9e>
 21c:	99 27       	eor	r25, r25
 21e:	ee 0f       	add	r30, r30
 220:	97 95       	ror	r25
 222:	87 95       	ror	r24
 224:	08 95       	ret

00000226 <__floatunsisf>:
 226:	e8 94       	clt
 228:	09 c0       	rjmp	.+18     	; 0x23c <__floatsisf+0x12>

0000022a <__floatsisf>:
 22a:	97 fb       	bst	r25, 7
 22c:	3e f4       	brtc	.+14     	; 0x23c <__floatsisf+0x12>
 22e:	90 95       	com	r25
 230:	80 95       	com	r24
 232:	70 95       	com	r23
 234:	61 95       	neg	r22
 236:	7f 4f       	sbci	r23, 0xFF	; 255
 238:	8f 4f       	sbci	r24, 0xFF	; 255
 23a:	9f 4f       	sbci	r25, 0xFF	; 255
 23c:	99 23       	and	r25, r25
 23e:	a9 f0       	breq	.+42     	; 0x26a <__floatsisf+0x40>
 240:	f9 2f       	mov	r31, r25
 242:	96 e9       	ldi	r25, 0x96	; 150
 244:	bb 27       	eor	r27, r27
 246:	93 95       	inc	r25
 248:	f6 95       	lsr	r31
 24a:	87 95       	ror	r24
 24c:	77 95       	ror	r23
 24e:	67 95       	ror	r22
 250:	b7 95       	ror	r27
 252:	f1 11       	cpse	r31, r1
 254:	f8 cf       	rjmp	.-16     	; 0x246 <__floatsisf+0x1c>
 256:	fa f4       	brpl	.+62     	; 0x296 <__floatsisf+0x6c>
 258:	bb 0f       	add	r27, r27
 25a:	11 f4       	brne	.+4      	; 0x260 <__floatsisf+0x36>
 25c:	60 ff       	sbrs	r22, 0
 25e:	1b c0       	rjmp	.+54     	; 0x296 <__floatsisf+0x6c>
 260:	6f 5f       	subi	r22, 0xFF	; 255
 262:	7f 4f       	sbci	r23, 0xFF	; 255
 264:	8f 4f       	sbci	r24, 0xFF	; 255
 266:	9f 4f       	sbci	r25, 0xFF	; 255
 268:	16 c0       	rjmp	.+44     	; 0x296 <__floatsisf+0x6c>
 26a:	88 23       	and	r24, r24
 26c:	11 f0       	breq	.+4      	; 0x272 <__floatsisf+0x48>
 26e:	96 e9       	ldi	r25, 0x96	; 150
 270:	11 c0       	rjmp	.+34     	; 0x294 <__floatsisf+0x6a>
 272:	77 23       	and	r23, r23
 274:	21 f0       	breq	.+8      	; 0x27e <__floatsisf+0x54>
 276:	9e e8       	ldi	r25, 0x8E	; 142
 278:	87 2f       	mov	r24, r23
 27a:	76 2f       	mov	r23, r22
 27c:	05 c0       	rjmp	.+10     	; 0x288 <__floatsisf+0x5e>
 27e:	66 23       	and	r22, r22
 280:	71 f0       	breq	.+28     	; 0x29e <__floatsisf+0x74>
 282:	96 e8       	ldi	r25, 0x86	; 134
 284:	86 2f       	mov	r24, r22
 286:	70 e0       	ldi	r23, 0x00	; 0
 288:	60 e0       	ldi	r22, 0x00	; 0
 28a:	2a f0       	brmi	.+10     	; 0x296 <__floatsisf+0x6c>
 28c:	9a 95       	dec	r25
 28e:	66 0f       	add	r22, r22
 290:	77 1f       	adc	r23, r23
 292:	88 1f       	adc	r24, r24
 294:	da f7       	brpl	.-10     	; 0x28c <__floatsisf+0x62>
 296:	88 0f       	add	r24, r24
 298:	96 95       	lsr	r25
 29a:	87 95       	ror	r24
 29c:	97 f9       	bld	r25, 7
 29e:	08 95       	ret

000002a0 <__fp_inf>:
 2a0:	97 f9       	bld	r25, 7
 2a2:	9f 67       	ori	r25, 0x7F	; 127
 2a4:	80 e8       	ldi	r24, 0x80	; 128
 2a6:	70 e0       	ldi	r23, 0x00	; 0
 2a8:	60 e0       	ldi	r22, 0x00	; 0
 2aa:	08 95       	ret

000002ac <__fp_nan>:
 2ac:	9f ef       	ldi	r25, 0xFF	; 255
 2ae:	80 ec       	ldi	r24, 0xC0	; 192
 2b0:	08 95       	ret

000002b2 <__fp_pscA>:
 2b2:	00 24       	eor	r0, r0
 2b4:	0a 94       	dec	r0
 2b6:	16 16       	cp	r1, r22
 2b8:	17 06       	cpc	r1, r23
 2ba:	18 06       	cpc	r1, r24
 2bc:	09 06       	cpc	r0, r25
 2be:	08 95       	ret

000002c0 <__fp_pscB>:
 2c0:	00 24       	eor	r0, r0
 2c2:	0a 94       	dec	r0
 2c4:	12 16       	cp	r1, r18
 2c6:	13 06       	cpc	r1, r19
 2c8:	14 06       	cpc	r1, r20
 2ca:	05 06       	cpc	r0, r21
 2cc:	08 95       	ret

000002ce <__fp_round>:
 2ce:	09 2e       	mov	r0, r25
 2d0:	03 94       	inc	r0
 2d2:	00 0c       	add	r0, r0
 2d4:	11 f4       	brne	.+4      	; 0x2da <__fp_round+0xc>
 2d6:	88 23       	and	r24, r24
 2d8:	52 f0       	brmi	.+20     	; 0x2ee <__fp_round+0x20>
 2da:	bb 0f       	add	r27, r27
 2dc:	40 f4       	brcc	.+16     	; 0x2ee <__fp_round+0x20>
 2de:	bf 2b       	or	r27, r31
 2e0:	11 f4       	brne	.+4      	; 0x2e6 <__fp_round+0x18>
 2e2:	60 ff       	sbrs	r22, 0
 2e4:	04 c0       	rjmp	.+8      	; 0x2ee <__fp_round+0x20>
 2e6:	6f 5f       	subi	r22, 0xFF	; 255
 2e8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ea:	8f 4f       	sbci	r24, 0xFF	; 255
 2ec:	9f 4f       	sbci	r25, 0xFF	; 255
 2ee:	08 95       	ret

000002f0 <__fp_split3>:
 2f0:	57 fd       	sbrc	r21, 7
 2f2:	90 58       	subi	r25, 0x80	; 128
 2f4:	44 0f       	add	r20, r20
 2f6:	55 1f       	adc	r21, r21
 2f8:	59 f0       	breq	.+22     	; 0x310 <__fp_splitA+0x10>
 2fa:	5f 3f       	cpi	r21, 0xFF	; 255
 2fc:	71 f0       	breq	.+28     	; 0x31a <__fp_splitA+0x1a>
 2fe:	47 95       	ror	r20

00000300 <__fp_splitA>:
 300:	88 0f       	add	r24, r24
 302:	97 fb       	bst	r25, 7
 304:	99 1f       	adc	r25, r25
 306:	61 f0       	breq	.+24     	; 0x320 <__fp_splitA+0x20>
 308:	9f 3f       	cpi	r25, 0xFF	; 255
 30a:	79 f0       	breq	.+30     	; 0x32a <__fp_splitA+0x2a>
 30c:	87 95       	ror	r24
 30e:	08 95       	ret
 310:	12 16       	cp	r1, r18
 312:	13 06       	cpc	r1, r19
 314:	14 06       	cpc	r1, r20
 316:	55 1f       	adc	r21, r21
 318:	f2 cf       	rjmp	.-28     	; 0x2fe <__fp_split3+0xe>
 31a:	46 95       	lsr	r20
 31c:	f1 df       	rcall	.-30     	; 0x300 <__fp_splitA>
 31e:	08 c0       	rjmp	.+16     	; 0x330 <__fp_splitA+0x30>
 320:	16 16       	cp	r1, r22
 322:	17 06       	cpc	r1, r23
 324:	18 06       	cpc	r1, r24
 326:	99 1f       	adc	r25, r25
 328:	f1 cf       	rjmp	.-30     	; 0x30c <__fp_splitA+0xc>
 32a:	86 95       	lsr	r24
 32c:	71 05       	cpc	r23, r1
 32e:	61 05       	cpc	r22, r1
 330:	08 94       	sec
 332:	08 95       	ret

00000334 <__fp_zero>:
 334:	e8 94       	clt

00000336 <__fp_szero>:
 336:	bb 27       	eor	r27, r27
 338:	66 27       	eor	r22, r22
 33a:	77 27       	eor	r23, r23
 33c:	cb 01       	movw	r24, r22
 33e:	97 f9       	bld	r25, 7
 340:	08 95       	ret

00000342 <__gesf2>:
 342:	66 d0       	rcall	.+204    	; 0x410 <__fp_cmp>
 344:	08 f4       	brcc	.+2      	; 0x348 <__gesf2+0x6>
 346:	8f ef       	ldi	r24, 0xFF	; 255
 348:	08 95       	ret

0000034a <__mulsf3>:
 34a:	0b d0       	rcall	.+22     	; 0x362 <__mulsf3x>
 34c:	c0 cf       	rjmp	.-128    	; 0x2ce <__fp_round>
 34e:	b1 df       	rcall	.-158    	; 0x2b2 <__fp_pscA>
 350:	28 f0       	brcs	.+10     	; 0x35c <__mulsf3+0x12>
 352:	b6 df       	rcall	.-148    	; 0x2c0 <__fp_pscB>
 354:	18 f0       	brcs	.+6      	; 0x35c <__mulsf3+0x12>
 356:	95 23       	and	r25, r21
 358:	09 f0       	breq	.+2      	; 0x35c <__mulsf3+0x12>
 35a:	a2 cf       	rjmp	.-188    	; 0x2a0 <__fp_inf>
 35c:	a7 cf       	rjmp	.-178    	; 0x2ac <__fp_nan>
 35e:	11 24       	eor	r1, r1
 360:	ea cf       	rjmp	.-44     	; 0x336 <__fp_szero>

00000362 <__mulsf3x>:
 362:	c6 df       	rcall	.-116    	; 0x2f0 <__fp_split3>
 364:	a0 f3       	brcs	.-24     	; 0x34e <__mulsf3+0x4>

00000366 <__mulsf3_pse>:
 366:	95 9f       	mul	r25, r21
 368:	d1 f3       	breq	.-12     	; 0x35e <__mulsf3+0x14>
 36a:	95 0f       	add	r25, r21
 36c:	50 e0       	ldi	r21, 0x00	; 0
 36e:	55 1f       	adc	r21, r21
 370:	62 9f       	mul	r22, r18
 372:	f0 01       	movw	r30, r0
 374:	72 9f       	mul	r23, r18
 376:	bb 27       	eor	r27, r27
 378:	f0 0d       	add	r31, r0
 37a:	b1 1d       	adc	r27, r1
 37c:	63 9f       	mul	r22, r19
 37e:	aa 27       	eor	r26, r26
 380:	f0 0d       	add	r31, r0
 382:	b1 1d       	adc	r27, r1
 384:	aa 1f       	adc	r26, r26
 386:	64 9f       	mul	r22, r20
 388:	66 27       	eor	r22, r22
 38a:	b0 0d       	add	r27, r0
 38c:	a1 1d       	adc	r26, r1
 38e:	66 1f       	adc	r22, r22
 390:	82 9f       	mul	r24, r18
 392:	22 27       	eor	r18, r18
 394:	b0 0d       	add	r27, r0
 396:	a1 1d       	adc	r26, r1
 398:	62 1f       	adc	r22, r18
 39a:	73 9f       	mul	r23, r19
 39c:	b0 0d       	add	r27, r0
 39e:	a1 1d       	adc	r26, r1
 3a0:	62 1f       	adc	r22, r18
 3a2:	83 9f       	mul	r24, r19
 3a4:	a0 0d       	add	r26, r0
 3a6:	61 1d       	adc	r22, r1
 3a8:	22 1f       	adc	r18, r18
 3aa:	74 9f       	mul	r23, r20
 3ac:	33 27       	eor	r19, r19
 3ae:	a0 0d       	add	r26, r0
 3b0:	61 1d       	adc	r22, r1
 3b2:	23 1f       	adc	r18, r19
 3b4:	84 9f       	mul	r24, r20
 3b6:	60 0d       	add	r22, r0
 3b8:	21 1d       	adc	r18, r1
 3ba:	82 2f       	mov	r24, r18
 3bc:	76 2f       	mov	r23, r22
 3be:	6a 2f       	mov	r22, r26
 3c0:	11 24       	eor	r1, r1
 3c2:	9f 57       	subi	r25, 0x7F	; 127
 3c4:	50 40       	sbci	r21, 0x00	; 0
 3c6:	8a f0       	brmi	.+34     	; 0x3ea <__mulsf3_pse+0x84>
 3c8:	e1 f0       	breq	.+56     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3ca:	88 23       	and	r24, r24
 3cc:	4a f0       	brmi	.+18     	; 0x3e0 <__mulsf3_pse+0x7a>
 3ce:	ee 0f       	add	r30, r30
 3d0:	ff 1f       	adc	r31, r31
 3d2:	bb 1f       	adc	r27, r27
 3d4:	66 1f       	adc	r22, r22
 3d6:	77 1f       	adc	r23, r23
 3d8:	88 1f       	adc	r24, r24
 3da:	91 50       	subi	r25, 0x01	; 1
 3dc:	50 40       	sbci	r21, 0x00	; 0
 3de:	a9 f7       	brne	.-22     	; 0x3ca <__mulsf3_pse+0x64>
 3e0:	9e 3f       	cpi	r25, 0xFE	; 254
 3e2:	51 05       	cpc	r21, r1
 3e4:	70 f0       	brcs	.+28     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e6:	5c cf       	rjmp	.-328    	; 0x2a0 <__fp_inf>
 3e8:	a6 cf       	rjmp	.-180    	; 0x336 <__fp_szero>
 3ea:	5f 3f       	cpi	r21, 0xFF	; 255
 3ec:	ec f3       	brlt	.-6      	; 0x3e8 <__mulsf3_pse+0x82>
 3ee:	98 3e       	cpi	r25, 0xE8	; 232
 3f0:	dc f3       	brlt	.-10     	; 0x3e8 <__mulsf3_pse+0x82>
 3f2:	86 95       	lsr	r24
 3f4:	77 95       	ror	r23
 3f6:	67 95       	ror	r22
 3f8:	b7 95       	ror	r27
 3fa:	f7 95       	ror	r31
 3fc:	e7 95       	ror	r30
 3fe:	9f 5f       	subi	r25, 0xFF	; 255
 400:	c1 f7       	brne	.-16     	; 0x3f2 <__mulsf3_pse+0x8c>
 402:	fe 2b       	or	r31, r30
 404:	88 0f       	add	r24, r24
 406:	91 1d       	adc	r25, r1
 408:	96 95       	lsr	r25
 40a:	87 95       	ror	r24
 40c:	97 f9       	bld	r25, 7
 40e:	08 95       	ret

00000410 <__fp_cmp>:
 410:	99 0f       	add	r25, r25
 412:	00 08       	sbc	r0, r0
 414:	55 0f       	add	r21, r21
 416:	aa 0b       	sbc	r26, r26
 418:	e0 e8       	ldi	r30, 0x80	; 128
 41a:	fe ef       	ldi	r31, 0xFE	; 254
 41c:	16 16       	cp	r1, r22
 41e:	17 06       	cpc	r1, r23
 420:	e8 07       	cpc	r30, r24
 422:	f9 07       	cpc	r31, r25
 424:	c0 f0       	brcs	.+48     	; 0x456 <__fp_cmp+0x46>
 426:	12 16       	cp	r1, r18
 428:	13 06       	cpc	r1, r19
 42a:	e4 07       	cpc	r30, r20
 42c:	f5 07       	cpc	r31, r21
 42e:	98 f0       	brcs	.+38     	; 0x456 <__fp_cmp+0x46>
 430:	62 1b       	sub	r22, r18
 432:	73 0b       	sbc	r23, r19
 434:	84 0b       	sbc	r24, r20
 436:	95 0b       	sbc	r25, r21
 438:	39 f4       	brne	.+14     	; 0x448 <__fp_cmp+0x38>
 43a:	0a 26       	eor	r0, r26
 43c:	61 f0       	breq	.+24     	; 0x456 <__fp_cmp+0x46>
 43e:	23 2b       	or	r18, r19
 440:	24 2b       	or	r18, r20
 442:	25 2b       	or	r18, r21
 444:	21 f4       	brne	.+8      	; 0x44e <__fp_cmp+0x3e>
 446:	08 95       	ret
 448:	0a 26       	eor	r0, r26
 44a:	09 f4       	brne	.+2      	; 0x44e <__fp_cmp+0x3e>
 44c:	a1 40       	sbci	r26, 0x01	; 1
 44e:	a6 95       	lsr	r26
 450:	8f ef       	ldi	r24, 0xFF	; 255
 452:	81 1d       	adc	r24, r1
 454:	81 1d       	adc	r24, r1
 456:	08 95       	ret

00000458 <_exit>:
 458:	f8 94       	cli

0000045a <__stop_program>:
 45a:	ff cf       	rjmp	.-2      	; 0x45a <__stop_program>
