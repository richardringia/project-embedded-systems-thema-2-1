
Project-embedded-systems.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000048a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000436  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000048a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000004fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a15  00000000  00000000  00000564  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000816  00000000  00000000  00000f79  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b8d  00000000  00000000  0000178f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  0000231c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00010eb1  00000000  00000000  000023b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d9  00000000  00000000  00013265  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0001333e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00003e35  00000000  00000000  00013386  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	39 c0       	rjmp	.+114    	; 0x78 <__bad_interrupt>
   6:	00 00       	nop
   8:	37 c0       	rjmp	.+110    	; 0x78 <__bad_interrupt>
   a:	00 00       	nop
   c:	35 c0       	rjmp	.+106    	; 0x78 <__bad_interrupt>
   e:	00 00       	nop
  10:	33 c0       	rjmp	.+102    	; 0x78 <__bad_interrupt>
  12:	00 00       	nop
  14:	31 c0       	rjmp	.+98     	; 0x78 <__bad_interrupt>
  16:	00 00       	nop
  18:	2f c0       	rjmp	.+94     	; 0x78 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2d c0       	rjmp	.+90     	; 0x78 <__bad_interrupt>
  1e:	00 00       	nop
  20:	2b c0       	rjmp	.+86     	; 0x78 <__bad_interrupt>
  22:	00 00       	nop
  24:	29 c0       	rjmp	.+82     	; 0x78 <__bad_interrupt>
  26:	00 00       	nop
  28:	27 c0       	rjmp	.+78     	; 0x78 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	25 c0       	rjmp	.+74     	; 0x78 <__bad_interrupt>
  2e:	00 00       	nop
  30:	23 c0       	rjmp	.+70     	; 0x78 <__bad_interrupt>
  32:	00 00       	nop
  34:	21 c0       	rjmp	.+66     	; 0x78 <__bad_interrupt>
  36:	00 00       	nop
  38:	1f c0       	rjmp	.+62     	; 0x78 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1d c0       	rjmp	.+58     	; 0x78 <__bad_interrupt>
  3e:	00 00       	nop
  40:	1b c0       	rjmp	.+54     	; 0x78 <__bad_interrupt>
  42:	00 00       	nop
  44:	19 c0       	rjmp	.+50     	; 0x78 <__bad_interrupt>
  46:	00 00       	nop
  48:	17 c0       	rjmp	.+46     	; 0x78 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	15 c0       	rjmp	.+42     	; 0x78 <__bad_interrupt>
  4e:	00 00       	nop
  50:	13 c0       	rjmp	.+38     	; 0x78 <__bad_interrupt>
  52:	00 00       	nop
  54:	11 c0       	rjmp	.+34     	; 0x78 <__bad_interrupt>
  56:	00 00       	nop
  58:	0f c0       	rjmp	.+30     	; 0x78 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	0d c0       	rjmp	.+26     	; 0x78 <__bad_interrupt>
  5e:	00 00       	nop
  60:	0b c0       	rjmp	.+22     	; 0x78 <__bad_interrupt>
  62:	00 00       	nop
  64:	09 c0       	rjmp	.+18     	; 0x78 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	34 d0       	rcall	.+104    	; 0xde <main>
  76:	dd c1       	rjmp	.+954    	; 0x432 <_exit>

00000078 <__bad_interrupt>:
  78:	c3 cf       	rjmp	.-122    	; 0x0 <__vectors>

0000007a <board_init>:
		port_pin_flags_t flags)
{
	/* Select direction and initial pin state */
	if (flags & IOPORT_DIR_OUTPUT) {
		if (flags & IOPORT_INIT_HIGH) {
			*((uint8_t *)port + 2) |= pin_mask;
  7a:	95 b1       	in	r25, 0x05	; 5
			*((uint8_t *)port + 2) &= ~pin_mask;
		}

		*((uint8_t *)port + 1) |= pin_mask;
	} else {
		*((uint8_t *)port + 1) &= ~pin_mask;
  7c:	84 b1       	in	r24, 0x04	; 4
  7e:	80 62       	ori	r24, 0x20	; 32
  80:	8f 77       	andi	r24, 0x7F	; 127
  82:	84 b9       	out	0x04, r24	; 4
		if (flags & IOPORT_PULL_UP) {
			*((uint8_t *)port + 2) |= pin_mask;
  84:	89 2f       	mov	r24, r25
  86:	80 6a       	ori	r24, 0xA0	; 160
  88:	85 b9       	out	0x05, r24	; 5
  8a:	08 95       	ret

0000008c <uart_init>:

void usart_transmit(uint8_t data){
	
	loop_until_bit_is_set(UCSR0A, UDRE0);
	// send the data
	UDR0 = data;
  8c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  90:	83 e3       	ldi	r24, 0x33	; 51
  92:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  96:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
  9a:	88 e1       	ldi	r24, 0x18	; 24
  9c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  a0:	86 e0       	ldi	r24, 0x06	; 6
  a2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  a6:	08 95       	ret

000000a8 <adc_init>:
}

void adc_init()
{
	 // AREF = AVcc
	 ADMUX = (1<<REFS0);
  a8:	80 e4       	ldi	r24, 0x40	; 64
  aa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	 
	 // ADC Enable and prescaler of 128
	 // 16000000/128 = 125000
	 ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
  ae:	87 e8       	ldi	r24, 0x87	; 135
  b0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
  b4:	08 95       	ret

000000b6 <adc_read>:
{
	// select the corresponding channel 0~7
	// ANDing with '7' will always keep the value
	// of 'ch' between 0 and 7
	ch &= 0b00000111;  // AND operation with 7
	ADMUX = (ADMUX & 0xF8)|ch;     // clears the bottom 3 bits before ORing
  b6:	ec e7       	ldi	r30, 0x7C	; 124
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	90 81       	ld	r25, Z
  bc:	98 7f       	andi	r25, 0xF8	; 248
  be:	87 70       	andi	r24, 0x07	; 7
  c0:	89 2b       	or	r24, r25
  c2:	80 83       	st	Z, r24
	
	// start single conversion
	// write '1' to ADSC
	ADCSRA |= (1<<ADSC);
  c4:	ea e7       	ldi	r30, 0x7A	; 122
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	80 64       	ori	r24, 0x40	; 64
  cc:	80 83       	st	Z, r24
	
	// wait for conversion to complete
	// ADSC becomes '0' again
	// till then, run loop continuously
	while(ADCSRA & (1<<ADSC));
  ce:	80 81       	ld	r24, Z
  d0:	86 fd       	sbrc	r24, 6
  d2:	fd cf       	rjmp	.-6      	; 0xce <adc_read+0x18>
	
	return (ADC);
  d4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
  d8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
  dc:	08 95       	ret

000000de <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();
  de:	cd df       	rcall	.-102    	; 0x7a <board_init>
	uart_init();
  e0:	d5 df       	rcall	.-86     	; 0x8c <uart_init>
	adc_init();
  e2:	e2 df       	rcall	.-60     	; 0xa8 <adc_init>
  e4:	8f ef       	ldi	r24, 0xFF	; 255
	DDRD = 0xff;
  e6:	8a b9       	out	0x0a, r24	; 10
  e8:	d0 e2       	ldi	r29, 0x20	; 32
		float value = adc_read(0) * 4.68;
		value /= 1024.0;
		float temperatureC = (value - 0.5) * 100;
		if (temperatureC > 16)
		{
			PORTD = 0b11100000;
  ea:	c0 ee       	ldi	r28, 0xE0	; 224
	uart_init();
	adc_init();
	DDRD = 0xff;
	
	while (1) {
		float value = adc_read(0) * 4.68;
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	e3 df       	rcall	.-58     	; 0xb6 <adc_read>
  f0:	bc 01       	movw	r22, r24
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	84 d0       	rcall	.+264    	; 0x200 <__floatunsisf>
  f8:	2f e8       	ldi	r18, 0x8F	; 143
  fa:	32 ec       	ldi	r19, 0xC2	; 194
  fc:	45 e9       	ldi	r20, 0x95	; 149
  fe:	50 e4       	ldi	r21, 0x40	; 64
 100:	11 d1       	rcall	.+546    	; 0x324 <__mulsf3>
 102:	20 e0       	ldi	r18, 0x00	; 0
		value /= 1024.0;
		float temperatureC = (value - 0.5) * 100;
		if (temperatureC > 16)
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	40 e8       	ldi	r20, 0x80	; 128
 108:	5a e3       	ldi	r21, 0x3A	; 58
 10a:	0c d1       	rcall	.+536    	; 0x324 <__mulsf3>
 10c:	20 e0       	ldi	r18, 0x00	; 0
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	40 e0       	ldi	r20, 0x00	; 0
 112:	5f e3       	ldi	r21, 0x3F	; 63
 114:	10 d0       	rcall	.+32     	; 0x136 <__subsf3>
 116:	20 e0       	ldi	r18, 0x00	; 0
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	48 ec       	ldi	r20, 0xC8	; 200
 11c:	52 e4       	ldi	r21, 0x42	; 66
 11e:	02 d1       	rcall	.+516    	; 0x324 <__mulsf3>
 120:	20 e0       	ldi	r18, 0x00	; 0
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	40 e8       	ldi	r20, 0x80	; 128
 126:	51 e4       	ldi	r21, 0x41	; 65
 128:	f9 d0       	rcall	.+498    	; 0x31c <__gesf2>
 12a:	18 16       	cp	r1, r24
 12c:	14 f4       	brge	.+4      	; 0x132 <main+0x54>
 12e:	cb b9       	out	0x0b, r28	; 11
 130:	dd cf       	rjmp	.-70     	; 0xec <main+0xe>
		{
			PORTD = 0b11100000;
 132:	db b9       	out	0x0b, r29	; 11
 134:	db cf       	rjmp	.-74     	; 0xec <main+0xe>

00000136 <__subsf3>:
		}
		else
		{
			PORTD = 0b00100000;
 136:	50 58       	subi	r21, 0x80	; 128

00000138 <__addsf3>:
 138:	bb 27       	eor	r27, r27
 13a:	aa 27       	eor	r26, r26
 13c:	0e d0       	rcall	.+28     	; 0x15a <__addsf3x>
 13e:	b4 c0       	rjmp	.+360    	; 0x2a8 <__fp_round>
 140:	a5 d0       	rcall	.+330    	; 0x28c <__fp_pscA>
 142:	30 f0       	brcs	.+12     	; 0x150 <__addsf3+0x18>
 144:	aa d0       	rcall	.+340    	; 0x29a <__fp_pscB>
 146:	20 f0       	brcs	.+8      	; 0x150 <__addsf3+0x18>
 148:	31 f4       	brne	.+12     	; 0x156 <__addsf3+0x1e>
 14a:	9f 3f       	cpi	r25, 0xFF	; 255
 14c:	11 f4       	brne	.+4      	; 0x152 <__addsf3+0x1a>
 14e:	1e f4       	brtc	.+6      	; 0x156 <__addsf3+0x1e>
 150:	9a c0       	rjmp	.+308    	; 0x286 <__fp_nan>
 152:	0e f4       	brtc	.+2      	; 0x156 <__addsf3+0x1e>
 154:	e0 95       	com	r30
 156:	e7 fb       	bst	r30, 7
 158:	90 c0       	rjmp	.+288    	; 0x27a <__fp_inf>

0000015a <__addsf3x>:
 15a:	e9 2f       	mov	r30, r25
 15c:	b6 d0       	rcall	.+364    	; 0x2ca <__fp_split3>
 15e:	80 f3       	brcs	.-32     	; 0x140 <__addsf3+0x8>
 160:	ba 17       	cp	r27, r26
 162:	62 07       	cpc	r22, r18
 164:	73 07       	cpc	r23, r19
 166:	84 07       	cpc	r24, r20
 168:	95 07       	cpc	r25, r21
 16a:	18 f0       	brcs	.+6      	; 0x172 <__addsf3x+0x18>
 16c:	71 f4       	brne	.+28     	; 0x18a <__addsf3x+0x30>
 16e:	9e f5       	brtc	.+102    	; 0x1d6 <__addsf3x+0x7c>
 170:	ce c0       	rjmp	.+412    	; 0x30e <__fp_zero>
 172:	0e f4       	brtc	.+2      	; 0x176 <__addsf3x+0x1c>
 174:	e0 95       	com	r30
 176:	0b 2e       	mov	r0, r27
 178:	ba 2f       	mov	r27, r26
 17a:	a0 2d       	mov	r26, r0
 17c:	0b 01       	movw	r0, r22
 17e:	b9 01       	movw	r22, r18
 180:	90 01       	movw	r18, r0
 182:	0c 01       	movw	r0, r24
 184:	ca 01       	movw	r24, r20
 186:	a0 01       	movw	r20, r0
 188:	11 24       	eor	r1, r1
 18a:	ff 27       	eor	r31, r31
 18c:	59 1b       	sub	r21, r25
 18e:	99 f0       	breq	.+38     	; 0x1b6 <__addsf3x+0x5c>
 190:	59 3f       	cpi	r21, 0xF9	; 249
 192:	50 f4       	brcc	.+20     	; 0x1a8 <__addsf3x+0x4e>
 194:	50 3e       	cpi	r21, 0xE0	; 224
 196:	68 f1       	brcs	.+90     	; 0x1f2 <__addsf3x+0x98>
 198:	1a 16       	cp	r1, r26
 19a:	f0 40       	sbci	r31, 0x00	; 0
 19c:	a2 2f       	mov	r26, r18
 19e:	23 2f       	mov	r18, r19
 1a0:	34 2f       	mov	r19, r20
 1a2:	44 27       	eor	r20, r20
 1a4:	58 5f       	subi	r21, 0xF8	; 248
 1a6:	f3 cf       	rjmp	.-26     	; 0x18e <__addsf3x+0x34>
 1a8:	46 95       	lsr	r20
 1aa:	37 95       	ror	r19
 1ac:	27 95       	ror	r18
 1ae:	a7 95       	ror	r26
 1b0:	f0 40       	sbci	r31, 0x00	; 0
 1b2:	53 95       	inc	r21
 1b4:	c9 f7       	brne	.-14     	; 0x1a8 <__addsf3x+0x4e>
 1b6:	7e f4       	brtc	.+30     	; 0x1d6 <__addsf3x+0x7c>
 1b8:	1f 16       	cp	r1, r31
 1ba:	ba 0b       	sbc	r27, r26
 1bc:	62 0b       	sbc	r22, r18
 1be:	73 0b       	sbc	r23, r19
 1c0:	84 0b       	sbc	r24, r20
 1c2:	ba f0       	brmi	.+46     	; 0x1f2 <__addsf3x+0x98>
 1c4:	91 50       	subi	r25, 0x01	; 1
 1c6:	a1 f0       	breq	.+40     	; 0x1f0 <__addsf3x+0x96>
 1c8:	ff 0f       	add	r31, r31
 1ca:	bb 1f       	adc	r27, r27
 1cc:	66 1f       	adc	r22, r22
 1ce:	77 1f       	adc	r23, r23
 1d0:	88 1f       	adc	r24, r24
 1d2:	c2 f7       	brpl	.-16     	; 0x1c4 <__addsf3x+0x6a>
 1d4:	0e c0       	rjmp	.+28     	; 0x1f2 <__addsf3x+0x98>
 1d6:	ba 0f       	add	r27, r26
 1d8:	62 1f       	adc	r22, r18
 1da:	73 1f       	adc	r23, r19
 1dc:	84 1f       	adc	r24, r20
 1de:	48 f4       	brcc	.+18     	; 0x1f2 <__addsf3x+0x98>
 1e0:	87 95       	ror	r24
 1e2:	77 95       	ror	r23
 1e4:	67 95       	ror	r22
 1e6:	b7 95       	ror	r27
 1e8:	f7 95       	ror	r31
 1ea:	9e 3f       	cpi	r25, 0xFE	; 254
 1ec:	08 f0       	brcs	.+2      	; 0x1f0 <__addsf3x+0x96>
 1ee:	b3 cf       	rjmp	.-154    	; 0x156 <__addsf3+0x1e>
 1f0:	93 95       	inc	r25
 1f2:	88 0f       	add	r24, r24
 1f4:	08 f0       	brcs	.+2      	; 0x1f8 <__addsf3x+0x9e>
 1f6:	99 27       	eor	r25, r25
 1f8:	ee 0f       	add	r30, r30
 1fa:	97 95       	ror	r25
 1fc:	87 95       	ror	r24
 1fe:	08 95       	ret

00000200 <__floatunsisf>:
 200:	e8 94       	clt
 202:	09 c0       	rjmp	.+18     	; 0x216 <__floatsisf+0x12>

00000204 <__floatsisf>:
 204:	97 fb       	bst	r25, 7
 206:	3e f4       	brtc	.+14     	; 0x216 <__floatsisf+0x12>
 208:	90 95       	com	r25
 20a:	80 95       	com	r24
 20c:	70 95       	com	r23
 20e:	61 95       	neg	r22
 210:	7f 4f       	sbci	r23, 0xFF	; 255
 212:	8f 4f       	sbci	r24, 0xFF	; 255
 214:	9f 4f       	sbci	r25, 0xFF	; 255
 216:	99 23       	and	r25, r25
 218:	a9 f0       	breq	.+42     	; 0x244 <__floatsisf+0x40>
 21a:	f9 2f       	mov	r31, r25
 21c:	96 e9       	ldi	r25, 0x96	; 150
 21e:	bb 27       	eor	r27, r27
 220:	93 95       	inc	r25
 222:	f6 95       	lsr	r31
 224:	87 95       	ror	r24
 226:	77 95       	ror	r23
 228:	67 95       	ror	r22
 22a:	b7 95       	ror	r27
 22c:	f1 11       	cpse	r31, r1
 22e:	f8 cf       	rjmp	.-16     	; 0x220 <__floatsisf+0x1c>
 230:	fa f4       	brpl	.+62     	; 0x270 <__floatsisf+0x6c>
 232:	bb 0f       	add	r27, r27
 234:	11 f4       	brne	.+4      	; 0x23a <__floatsisf+0x36>
 236:	60 ff       	sbrs	r22, 0
 238:	1b c0       	rjmp	.+54     	; 0x270 <__floatsisf+0x6c>
 23a:	6f 5f       	subi	r22, 0xFF	; 255
 23c:	7f 4f       	sbci	r23, 0xFF	; 255
 23e:	8f 4f       	sbci	r24, 0xFF	; 255
 240:	9f 4f       	sbci	r25, 0xFF	; 255
 242:	16 c0       	rjmp	.+44     	; 0x270 <__floatsisf+0x6c>
 244:	88 23       	and	r24, r24
 246:	11 f0       	breq	.+4      	; 0x24c <__floatsisf+0x48>
 248:	96 e9       	ldi	r25, 0x96	; 150
 24a:	11 c0       	rjmp	.+34     	; 0x26e <__floatsisf+0x6a>
 24c:	77 23       	and	r23, r23
 24e:	21 f0       	breq	.+8      	; 0x258 <__floatsisf+0x54>
 250:	9e e8       	ldi	r25, 0x8E	; 142
 252:	87 2f       	mov	r24, r23
 254:	76 2f       	mov	r23, r22
 256:	05 c0       	rjmp	.+10     	; 0x262 <__floatsisf+0x5e>
 258:	66 23       	and	r22, r22
 25a:	71 f0       	breq	.+28     	; 0x278 <__floatsisf+0x74>
 25c:	96 e8       	ldi	r25, 0x86	; 134
 25e:	86 2f       	mov	r24, r22
 260:	70 e0       	ldi	r23, 0x00	; 0
 262:	60 e0       	ldi	r22, 0x00	; 0
 264:	2a f0       	brmi	.+10     	; 0x270 <__floatsisf+0x6c>
 266:	9a 95       	dec	r25
 268:	66 0f       	add	r22, r22
 26a:	77 1f       	adc	r23, r23
 26c:	88 1f       	adc	r24, r24
 26e:	da f7       	brpl	.-10     	; 0x266 <__floatsisf+0x62>
 270:	88 0f       	add	r24, r24
 272:	96 95       	lsr	r25
 274:	87 95       	ror	r24
 276:	97 f9       	bld	r25, 7
 278:	08 95       	ret

0000027a <__fp_inf>:
 27a:	97 f9       	bld	r25, 7
 27c:	9f 67       	ori	r25, 0x7F	; 127
 27e:	80 e8       	ldi	r24, 0x80	; 128
 280:	70 e0       	ldi	r23, 0x00	; 0
 282:	60 e0       	ldi	r22, 0x00	; 0
 284:	08 95       	ret

00000286 <__fp_nan>:
 286:	9f ef       	ldi	r25, 0xFF	; 255
 288:	80 ec       	ldi	r24, 0xC0	; 192
 28a:	08 95       	ret

0000028c <__fp_pscA>:
 28c:	00 24       	eor	r0, r0
 28e:	0a 94       	dec	r0
 290:	16 16       	cp	r1, r22
 292:	17 06       	cpc	r1, r23
 294:	18 06       	cpc	r1, r24
 296:	09 06       	cpc	r0, r25
 298:	08 95       	ret

0000029a <__fp_pscB>:
 29a:	00 24       	eor	r0, r0
 29c:	0a 94       	dec	r0
 29e:	12 16       	cp	r1, r18
 2a0:	13 06       	cpc	r1, r19
 2a2:	14 06       	cpc	r1, r20
 2a4:	05 06       	cpc	r0, r21
 2a6:	08 95       	ret

000002a8 <__fp_round>:
 2a8:	09 2e       	mov	r0, r25
 2aa:	03 94       	inc	r0
 2ac:	00 0c       	add	r0, r0
 2ae:	11 f4       	brne	.+4      	; 0x2b4 <__fp_round+0xc>
 2b0:	88 23       	and	r24, r24
 2b2:	52 f0       	brmi	.+20     	; 0x2c8 <__fp_round+0x20>
 2b4:	bb 0f       	add	r27, r27
 2b6:	40 f4       	brcc	.+16     	; 0x2c8 <__fp_round+0x20>
 2b8:	bf 2b       	or	r27, r31
 2ba:	11 f4       	brne	.+4      	; 0x2c0 <__fp_round+0x18>
 2bc:	60 ff       	sbrs	r22, 0
 2be:	04 c0       	rjmp	.+8      	; 0x2c8 <__fp_round+0x20>
 2c0:	6f 5f       	subi	r22, 0xFF	; 255
 2c2:	7f 4f       	sbci	r23, 0xFF	; 255
 2c4:	8f 4f       	sbci	r24, 0xFF	; 255
 2c6:	9f 4f       	sbci	r25, 0xFF	; 255
 2c8:	08 95       	ret

000002ca <__fp_split3>:
 2ca:	57 fd       	sbrc	r21, 7
 2cc:	90 58       	subi	r25, 0x80	; 128
 2ce:	44 0f       	add	r20, r20
 2d0:	55 1f       	adc	r21, r21
 2d2:	59 f0       	breq	.+22     	; 0x2ea <__fp_splitA+0x10>
 2d4:	5f 3f       	cpi	r21, 0xFF	; 255
 2d6:	71 f0       	breq	.+28     	; 0x2f4 <__fp_splitA+0x1a>
 2d8:	47 95       	ror	r20

000002da <__fp_splitA>:
 2da:	88 0f       	add	r24, r24
 2dc:	97 fb       	bst	r25, 7
 2de:	99 1f       	adc	r25, r25
 2e0:	61 f0       	breq	.+24     	; 0x2fa <__fp_splitA+0x20>
 2e2:	9f 3f       	cpi	r25, 0xFF	; 255
 2e4:	79 f0       	breq	.+30     	; 0x304 <__fp_splitA+0x2a>
 2e6:	87 95       	ror	r24
 2e8:	08 95       	ret
 2ea:	12 16       	cp	r1, r18
 2ec:	13 06       	cpc	r1, r19
 2ee:	14 06       	cpc	r1, r20
 2f0:	55 1f       	adc	r21, r21
 2f2:	f2 cf       	rjmp	.-28     	; 0x2d8 <__fp_split3+0xe>
 2f4:	46 95       	lsr	r20
 2f6:	f1 df       	rcall	.-30     	; 0x2da <__fp_splitA>
 2f8:	08 c0       	rjmp	.+16     	; 0x30a <__fp_splitA+0x30>
 2fa:	16 16       	cp	r1, r22
 2fc:	17 06       	cpc	r1, r23
 2fe:	18 06       	cpc	r1, r24
 300:	99 1f       	adc	r25, r25
 302:	f1 cf       	rjmp	.-30     	; 0x2e6 <__fp_splitA+0xc>
 304:	86 95       	lsr	r24
 306:	71 05       	cpc	r23, r1
 308:	61 05       	cpc	r22, r1
 30a:	08 94       	sec
 30c:	08 95       	ret

0000030e <__fp_zero>:
 30e:	e8 94       	clt

00000310 <__fp_szero>:
 310:	bb 27       	eor	r27, r27
 312:	66 27       	eor	r22, r22
 314:	77 27       	eor	r23, r23
 316:	cb 01       	movw	r24, r22
 318:	97 f9       	bld	r25, 7
 31a:	08 95       	ret

0000031c <__gesf2>:
 31c:	66 d0       	rcall	.+204    	; 0x3ea <__fp_cmp>
 31e:	08 f4       	brcc	.+2      	; 0x322 <__gesf2+0x6>
 320:	8f ef       	ldi	r24, 0xFF	; 255
 322:	08 95       	ret

00000324 <__mulsf3>:
 324:	0b d0       	rcall	.+22     	; 0x33c <__mulsf3x>
 326:	c0 cf       	rjmp	.-128    	; 0x2a8 <__fp_round>
 328:	b1 df       	rcall	.-158    	; 0x28c <__fp_pscA>
 32a:	28 f0       	brcs	.+10     	; 0x336 <__mulsf3+0x12>
 32c:	b6 df       	rcall	.-148    	; 0x29a <__fp_pscB>
 32e:	18 f0       	brcs	.+6      	; 0x336 <__mulsf3+0x12>
 330:	95 23       	and	r25, r21
 332:	09 f0       	breq	.+2      	; 0x336 <__mulsf3+0x12>
 334:	a2 cf       	rjmp	.-188    	; 0x27a <__fp_inf>
 336:	a7 cf       	rjmp	.-178    	; 0x286 <__fp_nan>
 338:	11 24       	eor	r1, r1
 33a:	ea cf       	rjmp	.-44     	; 0x310 <__fp_szero>

0000033c <__mulsf3x>:
 33c:	c6 df       	rcall	.-116    	; 0x2ca <__fp_split3>
 33e:	a0 f3       	brcs	.-24     	; 0x328 <__mulsf3+0x4>

00000340 <__mulsf3_pse>:
 340:	95 9f       	mul	r25, r21
 342:	d1 f3       	breq	.-12     	; 0x338 <__mulsf3+0x14>
 344:	95 0f       	add	r25, r21
 346:	50 e0       	ldi	r21, 0x00	; 0
 348:	55 1f       	adc	r21, r21
 34a:	62 9f       	mul	r22, r18
 34c:	f0 01       	movw	r30, r0
 34e:	72 9f       	mul	r23, r18
 350:	bb 27       	eor	r27, r27
 352:	f0 0d       	add	r31, r0
 354:	b1 1d       	adc	r27, r1
 356:	63 9f       	mul	r22, r19
 358:	aa 27       	eor	r26, r26
 35a:	f0 0d       	add	r31, r0
 35c:	b1 1d       	adc	r27, r1
 35e:	aa 1f       	adc	r26, r26
 360:	64 9f       	mul	r22, r20
 362:	66 27       	eor	r22, r22
 364:	b0 0d       	add	r27, r0
 366:	a1 1d       	adc	r26, r1
 368:	66 1f       	adc	r22, r22
 36a:	82 9f       	mul	r24, r18
 36c:	22 27       	eor	r18, r18
 36e:	b0 0d       	add	r27, r0
 370:	a1 1d       	adc	r26, r1
 372:	62 1f       	adc	r22, r18
 374:	73 9f       	mul	r23, r19
 376:	b0 0d       	add	r27, r0
 378:	a1 1d       	adc	r26, r1
 37a:	62 1f       	adc	r22, r18
 37c:	83 9f       	mul	r24, r19
 37e:	a0 0d       	add	r26, r0
 380:	61 1d       	adc	r22, r1
 382:	22 1f       	adc	r18, r18
 384:	74 9f       	mul	r23, r20
 386:	33 27       	eor	r19, r19
 388:	a0 0d       	add	r26, r0
 38a:	61 1d       	adc	r22, r1
 38c:	23 1f       	adc	r18, r19
 38e:	84 9f       	mul	r24, r20
 390:	60 0d       	add	r22, r0
 392:	21 1d       	adc	r18, r1
 394:	82 2f       	mov	r24, r18
 396:	76 2f       	mov	r23, r22
 398:	6a 2f       	mov	r22, r26
 39a:	11 24       	eor	r1, r1
 39c:	9f 57       	subi	r25, 0x7F	; 127
 39e:	50 40       	sbci	r21, 0x00	; 0
 3a0:	8a f0       	brmi	.+34     	; 0x3c4 <__mulsf3_pse+0x84>
 3a2:	e1 f0       	breq	.+56     	; 0x3dc <__mulsf3_pse+0x9c>
 3a4:	88 23       	and	r24, r24
 3a6:	4a f0       	brmi	.+18     	; 0x3ba <__mulsf3_pse+0x7a>
 3a8:	ee 0f       	add	r30, r30
 3aa:	ff 1f       	adc	r31, r31
 3ac:	bb 1f       	adc	r27, r27
 3ae:	66 1f       	adc	r22, r22
 3b0:	77 1f       	adc	r23, r23
 3b2:	88 1f       	adc	r24, r24
 3b4:	91 50       	subi	r25, 0x01	; 1
 3b6:	50 40       	sbci	r21, 0x00	; 0
 3b8:	a9 f7       	brne	.-22     	; 0x3a4 <__mulsf3_pse+0x64>
 3ba:	9e 3f       	cpi	r25, 0xFE	; 254
 3bc:	51 05       	cpc	r21, r1
 3be:	70 f0       	brcs	.+28     	; 0x3dc <__mulsf3_pse+0x9c>
 3c0:	5c cf       	rjmp	.-328    	; 0x27a <__fp_inf>
 3c2:	a6 cf       	rjmp	.-180    	; 0x310 <__fp_szero>
 3c4:	5f 3f       	cpi	r21, 0xFF	; 255
 3c6:	ec f3       	brlt	.-6      	; 0x3c2 <__mulsf3_pse+0x82>
 3c8:	98 3e       	cpi	r25, 0xE8	; 232
 3ca:	dc f3       	brlt	.-10     	; 0x3c2 <__mulsf3_pse+0x82>
 3cc:	86 95       	lsr	r24
 3ce:	77 95       	ror	r23
 3d0:	67 95       	ror	r22
 3d2:	b7 95       	ror	r27
 3d4:	f7 95       	ror	r31
 3d6:	e7 95       	ror	r30
 3d8:	9f 5f       	subi	r25, 0xFF	; 255
 3da:	c1 f7       	brne	.-16     	; 0x3cc <__mulsf3_pse+0x8c>
 3dc:	fe 2b       	or	r31, r30
 3de:	88 0f       	add	r24, r24
 3e0:	91 1d       	adc	r25, r1
 3e2:	96 95       	lsr	r25
 3e4:	87 95       	ror	r24
 3e6:	97 f9       	bld	r25, 7
 3e8:	08 95       	ret

000003ea <__fp_cmp>:
 3ea:	99 0f       	add	r25, r25
 3ec:	00 08       	sbc	r0, r0
 3ee:	55 0f       	add	r21, r21
 3f0:	aa 0b       	sbc	r26, r26
 3f2:	e0 e8       	ldi	r30, 0x80	; 128
 3f4:	fe ef       	ldi	r31, 0xFE	; 254
 3f6:	16 16       	cp	r1, r22
 3f8:	17 06       	cpc	r1, r23
 3fa:	e8 07       	cpc	r30, r24
 3fc:	f9 07       	cpc	r31, r25
 3fe:	c0 f0       	brcs	.+48     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 400:	12 16       	cp	r1, r18
 402:	13 06       	cpc	r1, r19
 404:	e4 07       	cpc	r30, r20
 406:	f5 07       	cpc	r31, r21
 408:	98 f0       	brcs	.+38     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 40a:	62 1b       	sub	r22, r18
 40c:	73 0b       	sbc	r23, r19
 40e:	84 0b       	sbc	r24, r20
 410:	95 0b       	sbc	r25, r21
 412:	39 f4       	brne	.+14     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 414:	0a 26       	eor	r0, r26
 416:	61 f0       	breq	.+24     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 418:	23 2b       	or	r18, r19
 41a:	24 2b       	or	r18, r20
 41c:	25 2b       	or	r18, r21
 41e:	21 f4       	brne	.+8      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 420:	08 95       	ret
 422:	0a 26       	eor	r0, r26
 424:	09 f4       	brne	.+2      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 426:	a1 40       	sbci	r26, 0x01	; 1
 428:	a6 95       	lsr	r26
 42a:	8f ef       	ldi	r24, 0xFF	; 255
 42c:	81 1d       	adc	r24, r1
 42e:	81 1d       	adc	r24, r1
 430:	08 95       	ret

00000432 <_exit>:
 432:	f8 94       	cli

00000434 <__stop_program>:
 434:	ff cf       	rjmp	.-2      	; 0x434 <__stop_program>
