
Project-embedded-systems.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000270  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002c4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000334  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bdb  00000000  00000000  000003b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d7  00000000  00000000  00000f8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c0b  00000000  00000000  00001866  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c8  00000000  00000000  00002474  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00011063  00000000  00000000  0000253c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000f3  00000000  00000000  0001359f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00013692  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00003e8a  00000000  00000000  000136f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	4c c0       	rjmp	.+152    	; 0x9e <__bad_interrupt>
   6:	00 00       	nop
   8:	4a c0       	rjmp	.+148    	; 0x9e <__bad_interrupt>
   a:	00 00       	nop
   c:	48 c0       	rjmp	.+144    	; 0x9e <__bad_interrupt>
   e:	00 00       	nop
  10:	46 c0       	rjmp	.+140    	; 0x9e <__bad_interrupt>
  12:	00 00       	nop
  14:	44 c0       	rjmp	.+136    	; 0x9e <__bad_interrupt>
  16:	00 00       	nop
  18:	42 c0       	rjmp	.+132    	; 0x9e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	40 c0       	rjmp	.+128    	; 0x9e <__bad_interrupt>
  1e:	00 00       	nop
  20:	3e c0       	rjmp	.+124    	; 0x9e <__bad_interrupt>
  22:	00 00       	nop
  24:	3c c0       	rjmp	.+120    	; 0x9e <__bad_interrupt>
  26:	00 00       	nop
  28:	3a c0       	rjmp	.+116    	; 0x9e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	38 c0       	rjmp	.+112    	; 0x9e <__bad_interrupt>
  2e:	00 00       	nop
  30:	36 c0       	rjmp	.+108    	; 0x9e <__bad_interrupt>
  32:	00 00       	nop
  34:	34 c0       	rjmp	.+104    	; 0x9e <__bad_interrupt>
  36:	00 00       	nop
  38:	32 c0       	rjmp	.+100    	; 0x9e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	30 c0       	rjmp	.+96     	; 0x9e <__bad_interrupt>
  3e:	00 00       	nop
  40:	2e c0       	rjmp	.+92     	; 0x9e <__bad_interrupt>
  42:	00 00       	nop
  44:	2c c0       	rjmp	.+88     	; 0x9e <__bad_interrupt>
  46:	00 00       	nop
  48:	2a c0       	rjmp	.+84     	; 0x9e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	28 c0       	rjmp	.+80     	; 0x9e <__bad_interrupt>
  4e:	00 00       	nop
  50:	26 c0       	rjmp	.+76     	; 0x9e <__bad_interrupt>
  52:	00 00       	nop
  54:	24 c0       	rjmp	.+72     	; 0x9e <__bad_interrupt>
  56:	00 00       	nop
  58:	22 c0       	rjmp	.+68     	; 0x9e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	20 c0       	rjmp	.+64     	; 0x9e <__bad_interrupt>
  5e:	00 00       	nop
  60:	1e c0       	rjmp	.+60     	; 0x9e <__bad_interrupt>
  62:	00 00       	nop
  64:	1c c0       	rjmp	.+56     	; 0x9e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e7       	ldi	r30, 0x70	; 112
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 30       	cpi	r26, 0x00	; 0
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	43 d0       	rcall	.+134    	; 0x122 <main>
  9c:	e7 c0       	rjmp	.+462    	; 0x26c <_exit>

0000009e <__bad_interrupt>:
  9e:	b0 cf       	rjmp	.-160    	; 0x0 <__vectors>

000000a0 <board_init>:
  a0:	95 b1       	in	r25, 0x05	; 5
  a2:	84 b1       	in	r24, 0x04	; 4
  a4:	80 62       	ori	r24, 0x20	; 32
  a6:	8f 77       	andi	r24, 0x7F	; 127
  a8:	84 b9       	out	0x04, r24	; 4
  aa:	89 2f       	mov	r24, r25
  ac:	80 6a       	ori	r24, 0xA0	; 160
  ae:	85 b9       	out	0x05, r24	; 5
  b0:	08 95       	ret

000000b2 <uart_init>:
// TODO: change port number
float get_temp() {
	float value = adc_read(0) * 4.68;
	value /= 1024.0;
	return (value - 0.5) * 100;
}
  b2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  b6:	83 e3       	ldi	r24, 0x33	; 51
  b8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  bc:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
  c0:	88 e1       	ldi	r24, 0x18	; 24
  c2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  c6:	86 e0       	ldi	r24, 0x06	; 6
  c8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  cc:	08 95       	ret

000000ce <usart_transmit>:
  ce:	e0 ec       	ldi	r30, 0xC0	; 192
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	90 81       	ld	r25, Z
  d4:	95 ff       	sbrs	r25, 5
  d6:	fd cf       	rjmp	.-6      	; 0xd2 <usart_transmit+0x4>
  d8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  dc:	08 95       	ret

000000de <adc_init>:
  de:	80 e4       	ldi	r24, 0x40	; 64
  e0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
  e4:	87 e8       	ldi	r24, 0x87	; 135
  e6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
  ea:	08 95       	ret

000000ec <adc_read>:
  ec:	ec e7       	ldi	r30, 0x7C	; 124
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	90 81       	ld	r25, Z
  f2:	98 7f       	andi	r25, 0xF8	; 248
  f4:	87 70       	andi	r24, 0x07	; 7
  f6:	89 2b       	or	r24, r25
  f8:	80 83       	st	Z, r24
  fa:	ea e7       	ldi	r30, 0x7A	; 122
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	80 81       	ld	r24, Z
 100:	80 64       	ori	r24, 0x40	; 64
 102:	80 83       	st	Z, r24
 104:	80 81       	ld	r24, Z
 106:	86 fd       	sbrc	r24, 6
 108:	fd cf       	rjmp	.-6      	; 0x104 <adc_read+0x18>
 10a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 10e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
 112:	08 95       	ret

00000114 <get_light>:
 114:	85 e0       	ldi	r24, 0x05	; 5
 116:	ea df       	rcall	.-44     	; 0xec <adc_read>
 118:	bc 01       	movw	r22, r24
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	40 c0       	rjmp	.+128    	; 0x1a0 <__floatunsisf>
 120:	08 95       	ret

00000122 <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();
 122:	be df       	rcall	.-132    	; 0xa0 <board_init>
	uart_init();
 124:	c6 df       	rcall	.-116    	; 0xb2 <uart_init>
 126:	2f e3       	ldi	r18, 0x3F	; 63
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 128:	8d e0       	ldi	r24, 0x0D	; 13
 12a:	93 e0       	ldi	r25, 0x03	; 3
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <main+0xa>
 134:	00 c0       	rjmp	.+0      	; 0x136 <main+0x14>
 136:	00 00       	nop
	_delay_ms(1000);
	
	adc_init();
 138:	d2 df       	rcall	.-92     	; 0xde <adc_init>
	DDRD = 0xff;
 13a:	8f ef       	ldi	r24, 0xFF	; 255
	
	while (1) {
		//_delay_ms(3000);
		
		//uint8_t temp = usart_read();
		usart_transmit(get_light());
 13c:	8a b9       	out	0x0a, r24	; 10
 13e:	ea df       	rcall	.-44     	; 0x114 <get_light>
 140:	03 d0       	rcall	.+6      	; 0x148 <__fixunssfsi>
 142:	86 2f       	mov	r24, r22
 144:	c4 df       	rcall	.-120    	; 0xce <usart_transmit>
 146:	fb cf       	rjmp	.-10     	; 0x13e <main+0x1c>

00000148 <__fixunssfsi>:
 148:	70 d0       	rcall	.+224    	; 0x22a <__fp_splitA>
 14a:	88 f0       	brcs	.+34     	; 0x16e <__fixunssfsi+0x26>
 14c:	9f 57       	subi	r25, 0x7F	; 127
 14e:	90 f0       	brcs	.+36     	; 0x174 <__fixunssfsi+0x2c>
 150:	b9 2f       	mov	r27, r25
 152:	99 27       	eor	r25, r25
 154:	b7 51       	subi	r27, 0x17	; 23
 156:	a0 f0       	brcs	.+40     	; 0x180 <__fixunssfsi+0x38>
 158:	d1 f0       	breq	.+52     	; 0x18e <__fixunssfsi+0x46>
 15a:	66 0f       	add	r22, r22
 15c:	77 1f       	adc	r23, r23
 15e:	88 1f       	adc	r24, r24
 160:	99 1f       	adc	r25, r25
 162:	1a f0       	brmi	.+6      	; 0x16a <__fixunssfsi+0x22>
 164:	ba 95       	dec	r27
 166:	c9 f7       	brne	.-14     	; 0x15a <__fixunssfsi+0x12>
 168:	12 c0       	rjmp	.+36     	; 0x18e <__fixunssfsi+0x46>
 16a:	b1 30       	cpi	r27, 0x01	; 1
 16c:	81 f0       	breq	.+32     	; 0x18e <__fixunssfsi+0x46>
 16e:	77 d0       	rcall	.+238    	; 0x25e <__fp_zero>
 170:	b1 e0       	ldi	r27, 0x01	; 1
 172:	08 95       	ret
 174:	74 c0       	rjmp	.+232    	; 0x25e <__fp_zero>
 176:	67 2f       	mov	r22, r23
 178:	78 2f       	mov	r23, r24
 17a:	88 27       	eor	r24, r24
 17c:	b8 5f       	subi	r27, 0xF8	; 248
 17e:	39 f0       	breq	.+14     	; 0x18e <__fixunssfsi+0x46>
 180:	b9 3f       	cpi	r27, 0xF9	; 249
 182:	cc f3       	brlt	.-14     	; 0x176 <__fixunssfsi+0x2e>
 184:	86 95       	lsr	r24
 186:	77 95       	ror	r23
 188:	67 95       	ror	r22
 18a:	b3 95       	inc	r27
 18c:	d9 f7       	brne	.-10     	; 0x184 <__fixunssfsi+0x3c>
 18e:	3e f4       	brtc	.+14     	; 0x19e <__fixunssfsi+0x56>
 190:	90 95       	com	r25
 192:	80 95       	com	r24
 194:	70 95       	com	r23
 196:	61 95       	neg	r22
 198:	7f 4f       	sbci	r23, 0xFF	; 255
 19a:	8f 4f       	sbci	r24, 0xFF	; 255
 19c:	9f 4f       	sbci	r25, 0xFF	; 255
 19e:	08 95       	ret

000001a0 <__floatunsisf>:
 1a0:	e8 94       	clt
 1a2:	09 c0       	rjmp	.+18     	; 0x1b6 <__floatsisf+0x12>

000001a4 <__floatsisf>:
 1a4:	97 fb       	bst	r25, 7
 1a6:	3e f4       	brtc	.+14     	; 0x1b6 <__floatsisf+0x12>
 1a8:	90 95       	com	r25
 1aa:	80 95       	com	r24
 1ac:	70 95       	com	r23
 1ae:	61 95       	neg	r22
 1b0:	7f 4f       	sbci	r23, 0xFF	; 255
 1b2:	8f 4f       	sbci	r24, 0xFF	; 255
 1b4:	9f 4f       	sbci	r25, 0xFF	; 255
 1b6:	99 23       	and	r25, r25
 1b8:	a9 f0       	breq	.+42     	; 0x1e4 <__floatsisf+0x40>
 1ba:	f9 2f       	mov	r31, r25
 1bc:	96 e9       	ldi	r25, 0x96	; 150
 1be:	bb 27       	eor	r27, r27
 1c0:	93 95       	inc	r25
 1c2:	f6 95       	lsr	r31
 1c4:	87 95       	ror	r24
 1c6:	77 95       	ror	r23
 1c8:	67 95       	ror	r22
 1ca:	b7 95       	ror	r27
 1cc:	f1 11       	cpse	r31, r1
 1ce:	f8 cf       	rjmp	.-16     	; 0x1c0 <__floatsisf+0x1c>
 1d0:	fa f4       	brpl	.+62     	; 0x210 <__floatsisf+0x6c>
 1d2:	bb 0f       	add	r27, r27
 1d4:	11 f4       	brne	.+4      	; 0x1da <__floatsisf+0x36>
 1d6:	60 ff       	sbrs	r22, 0
 1d8:	1b c0       	rjmp	.+54     	; 0x210 <__floatsisf+0x6c>
 1da:	6f 5f       	subi	r22, 0xFF	; 255
 1dc:	7f 4f       	sbci	r23, 0xFF	; 255
 1de:	8f 4f       	sbci	r24, 0xFF	; 255
 1e0:	9f 4f       	sbci	r25, 0xFF	; 255
 1e2:	16 c0       	rjmp	.+44     	; 0x210 <__floatsisf+0x6c>
 1e4:	88 23       	and	r24, r24
 1e6:	11 f0       	breq	.+4      	; 0x1ec <__floatsisf+0x48>
 1e8:	96 e9       	ldi	r25, 0x96	; 150
 1ea:	11 c0       	rjmp	.+34     	; 0x20e <__floatsisf+0x6a>
 1ec:	77 23       	and	r23, r23
 1ee:	21 f0       	breq	.+8      	; 0x1f8 <__floatsisf+0x54>
 1f0:	9e e8       	ldi	r25, 0x8E	; 142
 1f2:	87 2f       	mov	r24, r23
 1f4:	76 2f       	mov	r23, r22
 1f6:	05 c0       	rjmp	.+10     	; 0x202 <__floatsisf+0x5e>
 1f8:	66 23       	and	r22, r22
 1fa:	71 f0       	breq	.+28     	; 0x218 <__floatsisf+0x74>
 1fc:	96 e8       	ldi	r25, 0x86	; 134
 1fe:	86 2f       	mov	r24, r22
 200:	70 e0       	ldi	r23, 0x00	; 0
 202:	60 e0       	ldi	r22, 0x00	; 0
 204:	2a f0       	brmi	.+10     	; 0x210 <__floatsisf+0x6c>
 206:	9a 95       	dec	r25
 208:	66 0f       	add	r22, r22
 20a:	77 1f       	adc	r23, r23
 20c:	88 1f       	adc	r24, r24
 20e:	da f7       	brpl	.-10     	; 0x206 <__floatsisf+0x62>
 210:	88 0f       	add	r24, r24
 212:	96 95       	lsr	r25
 214:	87 95       	ror	r24
 216:	97 f9       	bld	r25, 7
 218:	08 95       	ret

0000021a <__fp_split3>:
 21a:	57 fd       	sbrc	r21, 7
 21c:	90 58       	subi	r25, 0x80	; 128
 21e:	44 0f       	add	r20, r20
 220:	55 1f       	adc	r21, r21
 222:	59 f0       	breq	.+22     	; 0x23a <__fp_splitA+0x10>
 224:	5f 3f       	cpi	r21, 0xFF	; 255
 226:	71 f0       	breq	.+28     	; 0x244 <__fp_splitA+0x1a>
 228:	47 95       	ror	r20

0000022a <__fp_splitA>:
 22a:	88 0f       	add	r24, r24
 22c:	97 fb       	bst	r25, 7
 22e:	99 1f       	adc	r25, r25
 230:	61 f0       	breq	.+24     	; 0x24a <__fp_splitA+0x20>
 232:	9f 3f       	cpi	r25, 0xFF	; 255
 234:	79 f0       	breq	.+30     	; 0x254 <__fp_splitA+0x2a>
 236:	87 95       	ror	r24
 238:	08 95       	ret
 23a:	12 16       	cp	r1, r18
 23c:	13 06       	cpc	r1, r19
 23e:	14 06       	cpc	r1, r20
 240:	55 1f       	adc	r21, r21
 242:	f2 cf       	rjmp	.-28     	; 0x228 <__fp_split3+0xe>
 244:	46 95       	lsr	r20
 246:	f1 df       	rcall	.-30     	; 0x22a <__fp_splitA>
 248:	08 c0       	rjmp	.+16     	; 0x25a <__fp_splitA+0x30>
 24a:	16 16       	cp	r1, r22
 24c:	17 06       	cpc	r1, r23
 24e:	18 06       	cpc	r1, r24
 250:	99 1f       	adc	r25, r25
 252:	f1 cf       	rjmp	.-30     	; 0x236 <__fp_splitA+0xc>
 254:	86 95       	lsr	r24
 256:	71 05       	cpc	r23, r1
 258:	61 05       	cpc	r22, r1
 25a:	08 94       	sec
 25c:	08 95       	ret

0000025e <__fp_zero>:
 25e:	e8 94       	clt

00000260 <__fp_szero>:
 260:	bb 27       	eor	r27, r27
 262:	66 27       	eor	r22, r22
 264:	77 27       	eor	r23, r23
 266:	cb 01       	movw	r24, r22
 268:	97 f9       	bld	r25, 7
 26a:	08 95       	ret

0000026c <_exit>:
 26c:	f8 94       	cli

0000026e <__stop_program>:
 26e:	ff cf       	rjmp	.-2      	; 0x26e <__stop_program>
